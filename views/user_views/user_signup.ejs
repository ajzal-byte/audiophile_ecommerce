<%- include('../partials/user_header') -%>


  <main class="main">
    <section class="pt-150 pb-150">
        <div class="container">
            <div class="row">
                <div class="col-lg-10 m-auto">
                    <div class="row  d-flex align-items-center justify-content-center" >

                        <div class="col-lg-6">
                            <div class="login_wrap widget-taber-content p-30 background-white border-radius-5">
                                <div class="padding_eight_all bg-white">
                                    <div class="heading_s1">
                                        <h3 class="mb-30">Create an Account</h3>
                                    </div>
                                    <%if (typeof error !== 'undefined') {%>
                                        <p class="text-center" style="color:red;"><%= error %></p>
                                    <%}%>

                                    <form method="post" action="/postSignup" >
                                        <div class="form-group">
                                            <input type="text" required="" name="username" placeholder="Username" id="username">
                                            <div id="usernameError" class="error-message"></div>
                                        </div>
                                        <div class="form-group">
                                            <input type="text" required="" name="email" placeholder="Email" id="email">
                                            <div id="emailError" class="error-message"></div>
                                        </div>
                                        <div class="form-group">
                                            <input required="" type="password" name="password" placeholder="Password" id="password">
                                            <div id="passwordError" class="error-message"></div>
                                        </div>
                                        <div class="form-group">
                                            <input required="" type="password" name="confirmpassword" placeholder="Confirm password" id="confirmpassword">
                                            <div id="confirmpasswordError" class="error-message"></div>
                                        </div>
                                        <div class="form-check">
                                          <input class="form-check-input" type="checkbox" id="showPasswordCheckbox" onclick="togglePasswordVisibility()">
                                          <label class="form-check-label" for="showPasswordCheckbox">Show Password</label>
                                        </div>
                                        <div class="form-group">
                                            <input type="number" required="" name="phoneNumber" placeholder="Phone Number" id="phoneNumber">
                                            <div id="phoneNumberError" class="error-message"></div>
                                        </div>
                                        <div class="form-group">
                                            <button type="button" class="btn btn-sm btn-fill-out btn-block hover-up" id="sendOTPButton" name="sendOTPBtn" onclick="sendOTP()">Send OTP</button>
                                        </div>
                                        <div class="form-group">
                                            <button class="btn btn-sm btn-fill-out btn-block hover-up" type="button" id="resendOTPButton" style="display: none;">Resend OTP</button>
                                        </div>
                                        <div class="form-group">
                                            <div id="timer" class="mb-3" style="display: none; color: rgb(0, 0, 0);"></div>
                                        </div>
                                        <div class="form-group">
                                            <div id="expiry-timer" class="mb-3" style="display: none; color: rgb(0, 0, 0);"></div>
                                        </div>
                                        <div class="form-group">
                                            <input type="text" required="" name="otpInput" placeholder="Enter OTP" id="otpInput">
                                        </div>  
                                        <div class="form-group">
                                            <button type="button" class="btn btn-sm btn-fill-out btn-block hover-up" id="verifyOTPButton" name="verifyOTPBtn">Verify OTP</button>
                                        </div>

                                        <div class="form-group">
                                            <button type="submit" class="btn btn-fill-out btn-block hover-up" name="loginbtn" id="submitButton">Submit &amp; Register</button>
                                        </div>
                                    </form>
                                    
                                    <script>
                                      function togglePasswordVisibility() {
                                        var passwordInput = document.getElementById('password');
                                        var confirmPasswordInput = document.getElementById('confirmpassword');
                                      
                                        if (document.getElementById('showPasswordCheckbox').checked) {
                                          passwordInput.type = 'text';
                                          confirmPasswordInput.type = 'text';
                                        } else {
                                          passwordInput.type = 'password';
                                          confirmPasswordInput.type = 'password';
                                        }
                                      }
                                      </script>

                                    <div class="text-muted text-center">Already have an account? <a href="/login">Sign in now</a></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
  </main>


    <!-- for sending otp and verifing -->
    <script>

        let countdown;
        const timerElement = document.getElementById('timer'); 
        const sendOTPButton = document.getElementById("sendOTPButton");
        const resendOTPButton = document.getElementById("resendOTPButton");
        const submitButton = document.getElementById("submitButton");
        const verifyOTPButton = document.getElementById("verifyOTPButton");
        const expiryTimerElement = document.getElementById('expiry-timer');


        submitButton.disabled = true;
        verifyOTPButton.disabled = true;

        sendOTPButton.addEventListener("click",  (e)=> {
            e.preventDefault();

            // Validate the form before sending OTP
            if (validateForm()) {
                const email = document.querySelector('input[name="email"]').value;
                const phoneNumber = document.querySelector('input[name="phoneNumber"]').value;

                fetch(`/sendOtp?email=${email}&phoneNumber=${phoneNumber}`) 
                    .then((response) => {
                        if (!response.ok) {
                            throw new Error(`HTTP error! status: ${response.status}`);
                        }
                        return response.json();
                    })
                    .then((data) => {
                        console.log("Response from server", data);

                    if (data.error) {
                    // User already exists, display error message
                    Swal.fire({
                        position: 'top-center',
                        icon: 'error',
                        title: data.error,
                        showConfirmButton: false,
                        timer: 1500
                    });
                    } else {
                    // User doesn't exist, continue with OTP sending logic
                    Swal.fire({
                        position: 'top-center',
                        icon: 'success',
                        title: data.message,
                        showConfirmButton: false,
                        timer: 1500
                    });
                    verifyOTPButton.disabled = false;
                    startResendTimer();
                    startExpiryTimer();
                    }
                    })
                    .catch((error) => {
                        console.error("Error sending OTP", error);
                    });
            }
        });
        

        resendOTPButton.addEventListener("click",  (e)=> {
            e.preventDefault();
            clearInterval(countdown)
            // Validate the form before sending OTP
            if (validateForm()) {
                const email = document.querySelector('input[name="email"]').value;
                const phoneNumber = document.querySelector('input[name="phoneNumber"]').value;

                fetch(`/sendOtp?email=${email}&phoneNumber=${phoneNumber}`) 
                    .then((response) => {
                        if (!response.ok) {
                            throw new Error(`HTTP error! status: ${response.status}`);
                        }
                        return response.json();
                    })
                    .then((data) => {
                        console.log("Response from server", data);

                    if (data.error) {
                    // User already exists, display error message
                    Swal.fire({
                        position: 'top-center',
                        icon: 'error',
                        title: data.error,
                        showConfirmButton: false,
                        timer: 1500
                    });
                    } else {
                    // User doesn't exist, continue with OTP sending logic
                    Swal.fire({
                        position: 'top-center',
                        icon: 'success',
                        title: data.message,
                        showConfirmButton: false,
                        timer: 1500
                    });
                    startResendTimer();
                    startExpiryTimer();
                    }
                    })
                    .catch((error) => {
                        console.error("Error sending OTP", error);
                    });
            }
        });



        // Function to validate the form
        function validateForm() {
            // Reset previous error messages
            resetErrorMessages();

            const username = document.getElementById('username').value;
            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;
            const confirmPassword = document.getElementById('confirmpassword').value;
            const phoneNumber = document.getElementById('phoneNumber').value;

            // Validate username (should contain only characters without whitespace and allow numbers after at least one character)
            const usernamePattern = /^[A-Za-z][A-Za-z0-9]*$/;
            if (!username.match(usernamePattern)) {
                showError('usernameError', 'Username should contain only characters without whitespace and numbers after at least one character');
                return false;
            }


            // Validate email
            const emailPattern = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$/;
            if (!email.match(emailPattern)) {
                showError('emailError', 'Invalid email address');
                return false;   
            }

            // Validate password length and no whitespaces at the beginning
            if (password.trim().length < 6 || password !== password.trim()) {
                showError('passwordError', 'Password must be at least 6 characters and should not start with whitespaces');
                return false;
            }


            // Validate password confirmation
            if (password !== confirmPassword) {
                showError('confirmpasswordError', 'Passwords do not match');
                return false;
            }

            // Validate phoneNumber (should be a number with exactly 10 digits)
            if (isNaN(phoneNumber) || phoneNumber.length !== 10 || phoneNumber[0] === '0') {
                showError('phoneNumberError', 'Phone number must be a number with exactly 10 digits and should not start with 0');
                return false;
            }

            return true; 
        }

            // Function to show error message
        function showError(elementId, message) {
            const errorElement = document.getElementById(elementId);
            errorElement.textContent = message;
            errorElement.style.color = 'red';
        }

        // Function to reset error messages
        function resetErrorMessages() {
            const errorElements = document.querySelectorAll('.error-message');
            errorElements.forEach((element) => {
                element.textContent = '';
            });
        }

        function startResendTimer(){
            let remainingTime = 5;
            timerElement.style.display = 'block';
            resendOTPButton.style.display = 'none';
            sendOTPButton.style.display = 'none';

            countdown = setInterval(()=>{
                timerElement.textContent = `Resend OTP in ${remainingTime} seconds`;
                remainingTime--;

                if(remainingTime<0){
            timerElement.style.display = 'none';
            resendOTPButton.style.display = 'block';
            sendOTPButton.style.display = 'none';
            }

            }, 1000);

        }

        function startExpiryTimer(){
            let expiryTime = 30;
            expiryTimerElement.style.display = 'block';

            countdown = setInterval(()=>{
                expiryTimerElement.textContent = `Your OTP will expire in ${expiryTime} seconds`;
                expiryTime--;

                if(expiryTime<0){
                expiryTimerElement.style.display = 'none';
            }

            }, 1000);

        }
        


       // verify otp
// const verifyOTPButton = document.getElementById("verifyOTPButton");  
const form = document.querySelector('form');

verifyOTPButton.addEventListener("click", (e) => {
    e.preventDefault();

    const otpInput = document.querySelector('input[name="otpInput"]').value;
    fetch(`/verifyOtp?otpInput=${otpInput}`, {
        method: "POST"
    })

    .then((Response) => {
        if (!Response.ok) {
            throw new Error(`HTTP error! status: ${Response.status}`)
        }
        return Response.json();
    })
    .then((data) => {
        if(data.message){
            Swal.fire({
            position: 'top-center',
            icon: 'success',
            title: data.message,
            showConfirmButton: false,
            timer: 1500
        })

               // Disable all form fields
            Array.from(form.elements).forEach(element => {
            element.readOnly = true; // Set readonly instead of disabled
            });

            submitButton.disabled = false;
            resendOTPButton.disabled = true;

        }else if(data.error){
            Swal.fire({
            position: 'top-center',
            icon: 'error',
            title: data.error,
            showConfirmButton: false,
            timer: 1500
        });
        }
    })
    .catch((error) => {
        console.error("Error: ", error);
    })
});

    </script>

   
    <!-- Vendor JS-->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>


    <script src="/userAssets/js/vendor/modernizr-3.6.0.min.js"></script>
    <script src="/userAssets/js/vendor/jquery-3.6.0.min.js"></script>
    <script src="/userAssets/js/vendor/jquery-migrate-3.3.0.min.js"></script>
    <script src="/userAssets/js/vendor/bootstrap.bundle.min.js"></script>
    <script src="/userAssets/js/plugins/slick.js"></script>
    <script src="/userAssets/js/plugins/jquery.syotimer.min.js"></script>
    <script src="/userAssets/js/plugins/wow.js"></script>
    <script src="/userAssets/js/plugins/jquery-ui.js"></script>
    <script src="/userAssets/js/plugins/perfect-scrollbar.js"></script>
    <script src="/userAssets/js/plugins/magnific-popup.js"></script>
    <script src="/userAssets/js/plugins/select2.min.js"></script>
    <script src="/userAssets/js/plugins/waypoints.js"></script>
    <script src="/userAssets/js/plugins/counterup.js"></script>
    <script src="/userAssets/js/plugins/jquery.countdown.min.js"></script>
    <script src="/userAssets/js/plugins/images-loaded.js"></script>
    <script src="/userAssets/js/plugins/isotope.js"></script>
    <script src="/userAssets/js/plugins/scrollup.js"></script>
    <script src="/userAssets/js/plugins/jquery.vticker-min.js"></script>
    <script src="/userAssets/js/plugins/jquery.theia.sticky.js"></script>
    <!-- Template  JS -->
    <script src="/userAssets/js/maind134.js?v=3.4"></script>